// Autogenerated from Pigeon (v4.2.5), do not edit directly.
// See also: https://pub.dev/packages/pigeon
#import <Foundation/Foundation.h>
@protocol FlutterBinaryMessenger;
@protocol FlutterMessageCodec;
@class FlutterError;
@class FlutterStandardTypedData;

NS_ASSUME_NONNULL_BEGIN

typedef NS_ENUM(NSUInteger, ErrorCode) {
  ErrorCodeInvalidUrl = 0,
  ErrorCodeJoin = 1,
};

@class VoidResult;
@class PlatformError;
@class JoinArgs;

@interface VoidResult : NSObject
+ (instancetype)makeWithError:(nullable PlatformError *)error;
@property(nonatomic, strong, nullable) PlatformError * error;
@end

@interface PlatformError : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithMessage:(NSString *)message
    code:(ErrorCode)code;
@property(nonatomic, copy) NSString * message;
@property(nonatomic, assign) ErrorCode code;
@end

@interface JoinArgs : NSObject
/// `init` unavailable to enforce nonnull fields, see the `make` class method.
- (instancetype)init NS_UNAVAILABLE;
+ (instancetype)makeWithUrl:(NSString *)url
    token:(NSString *)token
    enableMicrophone:(NSNumber *)enableMicrophone
    enableCamera:(NSNumber *)enableCamera;
@property(nonatomic, copy) NSString * url;
@property(nonatomic, copy) NSString * token;
@property(nonatomic, strong) NSNumber * enableMicrophone;
@property(nonatomic, strong) NSNumber * enableCamera;
@end

/// The codec used by DailyClientMessenger.
NSObject<FlutterMessageCodec> *DailyClientMessengerGetCodec(void);

/// This is the base class used for generating the pigeon code
@protocol DailyClientMessenger
- (void)joinArgs:(JoinArgs *)args completion:(void(^)(VoidResult *_Nullable, FlutterError *_Nullable))completion;
/// @return `nil` only when `error != nil`.
- (nullable VoidResult *)leaveWithError:(FlutterError *_Nullable *_Nonnull)error;
@end

extern void DailyClientMessengerSetup(id<FlutterBinaryMessenger> binaryMessenger, NSObject<DailyClientMessenger> *_Nullable api);

NS_ASSUME_NONNULL_END
